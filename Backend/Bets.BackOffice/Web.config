<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>

  <connectionStrings>
    <add name="ctx" connectionString="Data Source=.;Initial Catalog=Bets;Integrated Security=SSPI;" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" autoReload="true" internalLogLevel="Trace" internalLogFile="d:\work\log.txt">

    <variable name="gmailUsername" value="${trim-whitespace:${file-contents:${basedir}/gmailusername.txt}}" />
    <variable name="gmailPassword" value="${trim-whitespace:${file-contents:${basedir}/gmailpassword.txt}}" />

    <extensions>
      <!-- load NLog.Extended to enable ASP.NET-specific functionality -->
      <add assembly="NLog.Extended" />
    </extensions>

    <!-- define various log targets -->
    <targets>
      <!-- write logs to file -->
      <target xsi:type="File" name="file" fileName="${basedir}/logs/${shortdate}.log" layout="${longdate} ${aspnet-request:servervariable=URL} ${uppercase:${level}} ${message}" />

      <!-- write log message to database -->
      <target xsi:type="Database" name="db">
        <!-- SQL command to be executed for each entry -->
        <commandText>INSERT INTO [LogEntries](TimeStamp, Message, Level, Logger) VALUES(getutcdate(), @msg, @level, @logger)</commandText>

        <!-- parameters for the command -->
        <parameter name="@msg" layout="${message}" />
        <parameter name="@level" layout="${level}" />
        <parameter name="@logger" layout="${logger}" />

        <!-- connection string -->
        <dbProvider>System.Data.SqlClient</dbProvider>
        <connectionString>server=.;database=bets;integrated security=sspi</connectionString>

        <!-- commands to install database -->
        <install-command>
          <text>CREATE DATABASE MyLogs</text>
          <connectionString>server=.;database=bets;integrated security=sspi</connectionString>
          <ignoreFailures>true</ignoreFailures>
        </install-command>

        <install-command>
          <text>
            CREATE TABLE LogEntries(
            id int primary key not null identity(1,1),
            TimeStamp datetime2,
            Message nvarchar(max),
            level nvarchar(10),
            logger nvarchar(128))
          </text>
        </install-command>

        <!-- commands to uninstall database -->
        <uninstall-command>
          <text>DROP DATABASE MyLogs</text>
          <connectionString>server=.;database=bets;integrated security=sspi</connectionString>
          <ignoreFailures>true</ignoreFailures>
        </uninstall-command>
      </target>

      <!-- log message to event log -->
      <target xsi:type="EventLog" name="eventLog" source="NLog Demo" layout="${message}${newline}Call site: ${callsite:className=true:methodName=true}${newline}Logger: ${logger}">
      </target>

      <!-- increase the performance counter -->
      <target xsi:type="PerfCounter" name="pc1" categoryName="My Log" counterName="My Counter">
      </target>

      <!-- send mail through GMail server -->
      <target xsi:type="Mail" name="mail" smtpServer="smtp.gmail.com" smtpPort="587" enableSsl="true" smtpAuthentication="Basic" smtpUserName="${gmailUsername}" smtpPassword="${gmailPassword}" from="${gmailUsername}" to="${gmailUsername}" subject="NLogDemo logs" addNewLines="true" />

      <!-- send mail asynchronously, so that it does not block the calling thread -->
      <wrapper-target xsi:type="AsyncWrapper" name="asyncMail">
        <target-ref name="mail" />
      </wrapper-target>

      <wrapper-target xsi:type="AspNetBufferingWrapper" name="allOutputs">
        <wrapper-target xsi:type="PostFilteringWrapper">
          <compound-target xsi:type="SplitGroup">
            <target-ref name="file" />
            <target-ref name="db" />
            <target-ref name="eventLog" />
            <target-ref name="pc1" />
            <target-ref name="asyncMail" />
          </compound-target>

          <!-- during normal execution only log Info messages -->
          <defaultFilter>level &gt;= LogLevel.Info</defaultFilter>

          <!-- if there is at least one error, log everything from trace level -->
          <when exists="level &gt;= LogLevel.Error" filter="level &gt;= LogLevel.Trace" />
        </wrapper-target>
      </wrapper-target>
    </targets>

    <rules>
      <logger name="*" minlevel="Trace" writeTo="file" />
    </rules>
  </nlog>
  <system.web>
    <compilation debug="true" targetFramework="4.5.2" />
    <httpRuntime targetFramework="4.5.2" />
  </system.web>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:6 /nowarn:1659;1699;1701" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-8.0.0.0" newVersion="8.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Cors" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NLog" publicKeyToken="5120e14c03d0593c" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.1.0" newVersion="3.0.1.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.webServer>
    <modules>
      <add name="BasicAuthHttpModule" type="Bets.WebApi.Config.BasicAuthHttpModule, Bets.WebApi" />
    </modules>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
</configuration>